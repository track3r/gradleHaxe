buildscript {
    repositories {
        ivy {
                // change to point to your repo, e.g. http://my.org/repo
                url "${System.properties['user.home']}/.duell/ivy"
            }
        jcenter()
    }

    dependencies {
        classpath group: 'com.prezi.haxe', name: 'gradle-haxe-plugin', version: '5.1-SNAPSHOT'
        classpath 'cz.malohlava:visteg:1.0.0'
        //classpath files('../gradle-haxe-plugin/build/libs/gradle-haxe-plugin-5.1-SNAPSHOT.jav');
    }
}

apply plugin: com.prezi.haxe.gradle.HaxePlugin
apply plugin: 'cz.malohlava.visteg'
apply plugin: "ivy-publish"

version = '3.9.2'
group = 'de.gameduell.types'

visteg {
    enabled        = true
    colouredNodes  = true
    colouredEdges  = true
    destination    = 'build/reports/visteg.dot'
    exporter       = 'dot'
    colorscheme    = 'spectral11'
    nodeShape      = 'box'
    startNodeShape = 'hexagon'
    endNodeShape   = 'doubleoctagon'
}

// model {
//     tasks.generateDescriptorFileForIvyCustomPublication {
//         destination = file("$buildDir/haxe-source/cpp/generated-ivy.xml")
//     }
// }

repositories {
        ivy {
                url "${System.properties['user.home']}/.duell/ivy"
            }
        ivy {
                url "${System.properties['user.home']}/.duell/haxelib-ivy"
            }
    }

haxe {
    // Set compiler options here for all platforms
    //include "haxe"
    main "Main.hx"

    js
    {
        flag "-D js-enabled"
    }

    cpp
    {
        flag "-D only-for-cpp"
        android
        {
            androidTest = "test"
        }
    }
}

task artifacts {
 group = "Help"
 description = "Displays the artifacts associated with each configuration of " + project
 doFirst {
  configurations.findAll().each { config ->
   println "${config}:"
   config.allArtifacts.getFiles().each { file -> println "" + file}
   println ' '
  }
 }
}

dependencies {
    main group: "de.gameduell.types", name: "sample-lib", version: "1.0.0"
    main group: "org.haxe.lib", name: "actuate", version: "1.8.7"
    cpp group: "org.haxe.lib", name: "mconsole", version: "1.6.0"
    android group: "org.haxe.lib", name: "polygonal-ds", version: "2.0.0-beta"
    android group: "org.haxe.lib", name: "polygonal-printf", version: "1.0.2-beta"

    //main files('actuate.zip')
}

publishing {
     repositories {
            ivy {
                // change to point to your repo, e.g. http://my.org/repo
                url "${System.properties['user.home']}/.duell/ivy"
            }
        }
  publications {
    ivy(IvyPublication)
    {
      artifact("$buildDir/haxe-source/cpp/gradleHaxe-3.9.2.har") {
        classifier "src"
        extension "zip"
      }
    }
  }
}

configurations.all {
    //resolutionStrategy.dependencySubstitution.all { DependencySubstitution dependency ->
        //println dependency.requested
        /*if (dependency.requested instanceof ModuleComponentSelector && dependency.requested.group == "org.example") {
            def targetProject = findProject(":${dependency.requested.module}")
            if (targetProject != null) {
                dependency.useTarget targetProject
            }
        }*/
    //}
}


// task writePomCpp << {
//     pom {
//         project {
//             groupId 'de.gameduell.haxe'
//             artifactId 'types-cpp'
//             version '3.9.2'
//         }
//     }.writeTo("$buildDir/haxe-source/cpp/pom.xml")
// }

//task compileCpp(type: com.prezi.haxe.gradle.HaxeCompile) {
   // main "Main.hx"
    // source <directory>
    // targetPlatform "<js|swf|as3>"

    // // Optional parameters
    // configuration <configuration>
    // debug <true|false>
    // embed <file> ["<name>"]
    // embedAll <directory>
    // exclude "<package|class>"
    // flag "<flag>"
    // include "<package|class>"
    // macro "<macro>"
    // outputDirectory <directory>
    // outputFile <file>
    // resource <directory>
//}